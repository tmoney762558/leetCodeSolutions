/**
 * Definition for a binary tree node.
 * class TreeNode {
 *     val: number
 *     left: TreeNode | null
 *     right: TreeNode | null
 *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {
 *         this.val = (val===undefined ? 0 : val)
 *         this.left = (left===undefined ? null : left)
 *         this.right = (right===undefined ? null : right)
 *     }
 * }
 */

function getMinimumDifference(root: TreeNode | null): number {
    let min = null;
    const result = [];

    function searchTree(node) {
        if (node) {
            searchTree(node.left)
            result.push(node.val);
            if (result.length > 1) {
                min = min ? Math.min(min, Math.abs(result[result.length - 1] - result[result.length - 2])) : Math.abs(result[0] - result[1]);
            }
            searchTree(node.right);
        }
    }

    searchTree(root);

    return min;
};
